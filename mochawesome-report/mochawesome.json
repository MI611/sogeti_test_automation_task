{
  "stats": {
    "suites": 5,
    "tests": 19,
    "passes": 19,
    "pending": 0,
    "failures": 0,
    "start": "2020-08-16T10:52:58.833Z",
    "end": "2020-08-16T10:53:02.597Z",
    "duration": 3764,
    "testsRegistered": 19,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5b62802e-8189-4644-88cf-7ce7876e9c75",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "checkForUnfulfilledExpectations.call(this);\nrecordedExpects = [];",
          "err": {},
          "uuid": "cb17ddc2-243c-4893-a570-3fe31f03766f",
          "parentUUID": "5b62802e-8189-4644-88cf-7ce7876e9c75",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "81dbd78c-473a-4492-a80a-3ac02a6012b7",
          "title": "Test Case 1",
          "fullFile": "/Users/Migii/Desktop/sogeti_test_automation_task/sogeti_test_automation_task/test/firsttestcase_test.js",
          "file": "/test/firsttestcase_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should navigate to sogeti.com hover over Services, click automation and check for active links and content",
              "fullTitle": "Test Case 1 should navigate to sogeti.com hover over Services, click automation and check for active links and content",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let _this = this;\n(async function checkVisibilityOfPageAndText() {\n    let driver = await new Builder().forBrowser('chrome').build();\n    try {\n        await driver.get(linkToOpen);\n        console.log('Opened ' + linkToOpen);\n        await driver.sleep(2000);\n        await hoverLink(driver, elementToHover);\n        assertPageTitle = await clickLink(driver, elementToClick, elementText).then((pTitle) => {\n            return pTitle;\n        });\n        addContext(_this, assertPageTitle);\n        console.log(\"page title: \" + assertPageTitle);\n        await driver.sleep(3000);\n        await hoverLink(driver, elementToHover);\n    } finally {\n        await driver.quit();\n    }\n})()",
              "err": {},
              "uuid": "2481f69c-cd93-45fe-b453-5ab7ba5ea3b2",
              "parentUUID": "81dbd78c-473a-4492-a80a-3ac02a6012b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2481f69c-cd93-45fe-b453-5ab7ba5ea3b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7479cb76-6b46-4e5e-ac3c-afdf36ac1525",
          "title": "Test Case 2",
          "fullFile": "/Users/Migii/Desktop/sogeti_test_automation_task/sogeti_test_automation_task/test/secondtestcase_test.js",
          "file": "/test/secondtestcase_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should navigate to sogeti.com hover over Services, click automation, scroll down to contact form, insert data and submit form to get thank you message",
              "fullTitle": "Test Case 2 should navigate to sogeti.com hover over Services, click automation, scroll down to contact form, insert data and submit form to get thank you message",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(async function goToAutomationPageContactInputDataAndSubmit() {\n    let driver = await new Builder().forBrowser('chrome').build();\n    try {\n        await driver.get(linkToOpen);\n        console.log('Opened ' + linkToOpen);\n        await driver.sleep(2000);\n        await hoverLinkAndClickToNavigate(driver, elementToHover, elementToClick, elementText);\n        await driver.sleep(1000);\n        await scrollToElement(driver, scrollElementID);\n        //Generate data, input and submit\n        let randomFirstName = await faker.name.firstName();\n        let randomLastName = await faker.name.lastName();\n        let randomEmail = await faker.internet.email();\n        let randomPhone = await faker.phone.phoneNumber();\n        let randomMessage = await faker.lorem.sentence();\n        //extra\n        await checkContactFormValidations(driver);\n        await inputRandomGeneratedDataAndSubmitWithCheckbox(driver, randomFirstName, randomLastName, randomEmail, randomPhone, randomMessage);\n        await driver.sleep(5000);\n    } finally {\n        await driver.quit();\n    }\n})();",
              "err": {},
              "uuid": "e547372c-f96c-43c5-9f2a-10a61caae657",
              "parentUUID": "7479cb76-6b46-4e5e-ac3c-afdf36ac1525",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e547372c-f96c-43c5-9f2a-10a61caae657"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f02489b9-2513-4f42-90c3-13d3f1af035f",
          "title": "Test Case 3",
          "fullFile": "/Users/Migii/Desktop/sogeti_test_automation_task/sogeti_test_automation_task/test/thirdtestcase_test.js",
          "file": "/test/thirdtestcase_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should navigate to sogeti.com click on worldwide and check if every link works as expected",
              "fullTitle": "Test Case 3 should navigate to sogeti.com click on worldwide and check if every link works as expected",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(async function checkWorldwideLinksOfSogetiPage() {\n    let driver = await new Builder().forBrowser('chrome').build();\n    try {\n        await driver.get(linkToOpen);\n        console.log('Opened ' + linkToOpen);\n        await driver.sleep(1000);\n        await checkMultipleLinksWorking(driver);\n        await driver.sleep(2000);\n    } finally {\n        await driver.quit();\n    }\n})();",
              "err": {},
              "uuid": "ff714add-c844-4122-acd7-d5ed588a993a",
              "parentUUID": "f02489b9-2513-4f42-90c3-13d3f1af035f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff714add-c844-4122-acd7-d5ed588a993a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aa50ceec-4ab6-468b-aa5b-fc25e92ae1cd",
          "title": "Zippopotam API",
          "fullFile": "/Users/Migii/Desktop/sogeti_test_automation_task/sogeti_test_automation_task/test/zippopotamapi_test.js",
          "file": "/test/zippopotamapi_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a response with HTTP code 200",
              "fullTitle": "Zippopotam API should return a response with HTTP code 200",
              "timedOut": false,
              "duration": 348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = chakram.get(\"http://api.zippopotam.us/de/bw/stuttgart\");\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
              "err": {},
              "uuid": "2f3e3cbd-1dbb-4b91-a60e-3377cdffa475",
              "parentUUID": "aa50ceec-4ab6-468b-aa5b-fc25e92ae1cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a response time below 1s",
              "fullTitle": "Zippopotam API should have a response time below 1s",
              "timedOut": false,
              "duration": 324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let request = chakram.get(\"http://api.zippopotam.us/de/bw/stuttgart\");\nreturn expect(request).to.have.responsetime(999);",
              "err": {},
              "uuid": "25e55bdd-8ee2-467f-a2a5-ab92e392878e",
              "parentUUID": "aa50ceec-4ab6-468b-aa5b-fc25e92ae1cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return country Germany and state Baden-WÃ¼rttemberg",
              "fullTitle": "Zippopotam API should return country Germany and state Baden-WÃ¼rttemberg",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = chakram.get(\"http://api.zippopotam.us/de/bw/stuttgart\").then((resp) => {\n    expect(resp.body.country).to.equal('Germany');\n    expect(resp.body.country).to.equal('Baden-WÃ¼rttemberg');\n    return chakram.wait();\n});",
              "err": {},
              "uuid": "873379b4-9c93-40b2-a0bc-dfaf31b7bca4",
              "parentUUID": "aa50ceec-4ab6-468b-aa5b-fc25e92ae1cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have place name Stuttgart Degerloch for post code 70597",
              "fullTitle": "Zippopotam API should have place name Stuttgart Degerloch for post code 70597",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = chakram.get(\"http://api.zippopotam.us/de/bw/stuttgart\").then((resp) => {\n    for (let place in resp.body.places) {\n        if (place['post code'] == 70597) {\n            expect(place['place name']).to.equal('Stuttgart Degerloch');\n        }\n    }\n    return chakram.wait();\n});",
              "err": {},
              "uuid": "df154586-4445-432f-9f29-c1cfb202c2cf",
              "parentUUID": "aa50ceec-4ab6-468b-aa5b-fc25e92ae1cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f3e3cbd-1dbb-4b91-a60e-3377cdffa475",
            "25e55bdd-8ee2-467f-a2a5-ab92e392878e",
            "873379b4-9c93-40b2-a0bc-dfaf31b7bca4",
            "df154586-4445-432f-9f29-c1cfb202c2cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 690,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
          "title": "When the links are working as expected",
          "fullFile": "/Users/Migii/Desktop/sogeti_test_automation_task/sogeti_test_automation_task/test/zippopotamapidatadriven_test.js",
          "file": "/test/zippopotamapidatadriven_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return 200 for request http://api.zippopotam.us/us/90210",
              "fullTitle": "When the links are working as expected should return 200 for request http://api.zippopotam.us/us/90210",
              "timedOut": false,
              "duration": 311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.status}`).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "b7f328e8-6849-48e3-b78e-947dbe796404",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have content type JSON for request http://api.zippopotam.us/us/90210",
              "fullTitle": "When the links are working as expected should have content type JSON for request http://api.zippopotam.us/us/90210",
              "timedOut": false,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.header['content-type']}`).to.have.header('content-type', 'application/json');\n        done();\n    });",
              "err": {},
              "uuid": "35568a3f-9d21-48d8-a82a-39cb28db6902",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a response time below 1s for request http://api.zippopotam.us/us/90210",
              "fullTitle": "When the links are working as expected should have a response time below 1s for request http://api.zippopotam.us/us/90210",
              "timedOut": false,
              "duration": 296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        let responseTime = new Date() - start;\n        expect(responseTime,`... instead took ${ responseTime }`).to.have.below(1000);\n        done();\n    });",
              "err": {},
              "uuid": "7212af62-6901-4a58-9ca5-ecdf126fc399",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have country: us and postal code: 90210 for place name: Beverly Hills",
              "fullTitle": "When the links are working as expected should have country: us and postal code: 90210 for place name: Beverly Hills",
              "timedOut": false,
              "duration": 230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res.body['country abbreviation'],`... instead having ${ res.body['country abbreviation'] }`).to.equal(country.toUpperCase());\n        expect(res.body['post code'],`... instead having ${ res.body['post code'] }`).to.equal(postal_code);\n        expect(res.body.places[0]['place name'],`... instead having ${ res.body.places[0]['place name'] }`).to.equal(place_name);\n        done();\n    });",
              "err": {},
              "uuid": "7b0ff54d-94a4-45d7-8bfc-e1fa9c7ca0f2",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 200 for request http://api.zippopotam.us/us/12345",
              "fullTitle": "When the links are working as expected should return 200 for request http://api.zippopotam.us/us/12345",
              "timedOut": false,
              "duration": 361,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.status}`).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "26710201-dc4c-42a6-a586-26d83e637e80",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have content type JSON for request http://api.zippopotam.us/us/12345",
              "fullTitle": "When the links are working as expected should have content type JSON for request http://api.zippopotam.us/us/12345",
              "timedOut": false,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.header['content-type']}`).to.have.header('content-type', 'application/json');\n        done();\n    });",
              "err": {},
              "uuid": "330b2e08-8e05-465c-bffe-bd958a5af655",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a response time below 1s for request http://api.zippopotam.us/us/12345",
              "fullTitle": "When the links are working as expected should have a response time below 1s for request http://api.zippopotam.us/us/12345",
              "timedOut": false,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        let responseTime = new Date() - start;\n        expect(responseTime,`... instead took ${ responseTime }`).to.have.below(1000);\n        done();\n    });",
              "err": {},
              "uuid": "3563d91a-bb19-40cd-9721-e35dc27dd48e",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have country: us and postal code: 12345 for place name: Schenectady",
              "fullTitle": "When the links are working as expected should have country: us and postal code: 12345 for place name: Schenectady",
              "timedOut": false,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res.body['country abbreviation'],`... instead having ${ res.body['country abbreviation'] }`).to.equal(country.toUpperCase());\n        expect(res.body['post code'],`... instead having ${ res.body['post code'] }`).to.equal(postal_code);\n        expect(res.body.places[0]['place name'],`... instead having ${ res.body.places[0]['place name'] }`).to.equal(place_name);\n        done();\n    });",
              "err": {},
              "uuid": "76551c53-d472-456a-9f98-63bf92227f17",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 200 for request http://api.zippopotam.us/ca/B2R",
              "fullTitle": "When the links are working as expected should return 200 for request http://api.zippopotam.us/ca/B2R",
              "timedOut": false,
              "duration": 209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.status}`).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "4d01aad8-4d7b-4e37-80a1-6f1224f0f322",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have content type JSON for request http://api.zippopotam.us/ca/B2R",
              "fullTitle": "When the links are working as expected should have content type JSON for request http://api.zippopotam.us/ca/B2R",
              "timedOut": false,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.header['content-type']}`).to.have.header('content-type', 'application/json');\n        done();\n    });",
              "err": {},
              "uuid": "e85746bb-fee7-416e-a712-3241f07942d3",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a response time below 1s for request http://api.zippopotam.us/ca/B2R",
              "fullTitle": "When the links are working as expected should have a response time below 1s for request http://api.zippopotam.us/ca/B2R",
              "timedOut": false,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        let responseTime = new Date() - start;\n        expect(responseTime,`... instead took ${ responseTime }`).to.have.below(1000);\n        done();\n    });",
              "err": {},
              "uuid": "ac8eb344-73f6-4d19-9236-65e391288c94",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have country: ca and postal code: B2R for place name: Waverley",
              "fullTitle": "When the links are working as expected should have country: ca and postal code: B2R for place name: Waverley",
              "timedOut": false,
              "duration": 233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res.body['country abbreviation'],`... instead having ${ res.body['country abbreviation'] }`).to.equal(country.toUpperCase());\n        expect(res.body['post code'],`... instead having ${ res.body['post code'] }`).to.equal(postal_code);\n        expect(res.body.places[0]['place name'],`... instead having ${ res.body.places[0]['place name'] }`).to.equal(place_name);\n        done();\n    });",
              "err": {},
              "uuid": "59a69a63-54f2-4bc5-ab4c-292db8794ed1",
              "parentUUID": "05b104bb-fb7c-4b02-80ab-8d382cca717c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7f328e8-6849-48e3-b78e-947dbe796404",
            "35568a3f-9d21-48d8-a82a-39cb28db6902",
            "7212af62-6901-4a58-9ca5-ecdf126fc399",
            "7b0ff54d-94a4-45d7-8bfc-e1fa9c7ca0f2",
            "26710201-dc4c-42a6-a586-26d83e637e80",
            "330b2e08-8e05-465c-bffe-bd958a5af655",
            "3563d91a-bb19-40cd-9721-e35dc27dd48e",
            "76551c53-d472-456a-9f98-63bf92227f17",
            "4d01aad8-4d7b-4e37-80a1-6f1224f0f322",
            "e85746bb-fee7-416e-a712-3241f07942d3",
            "ac8eb344-73f6-4d19-9236-65e391288c94",
            "59a69a63-54f2-4bc5-ab4c-292db8794ed1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2950,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": {
        "enableCode": "false"
      },
      "version": "5.1.0"
    }
  }
}