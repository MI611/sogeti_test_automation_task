{
  "stats": {
    "suites": 2,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2020-08-16T14:55:39.967Z",
    "end": "2020-08-16T14:55:50.210Z",
    "duration": 10243,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2deeed40-fb66-4ba1-a246-f9041edbc5c9",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "checkForUnfulfilledExpectations.call(this);\nrecordedExpects = [];",
          "err": {},
          "uuid": "f4338329-2082-4e93-8faa-c1412859cd61",
          "parentUUID": "2deeed40-fb66-4ba1-a246-f9041edbc5c9",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "e83a35d8-b203-4685-9378-2d07189a7783",
          "title": "Zippopotam API",
          "fullFile": "/Users/Migii/Desktop/sogeti_test_automation_task/sogeti_test_automation_task/test/zippopotamapi_test.js",
          "file": "/test/zippopotamapi_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a response with HTTP code 200",
              "fullTitle": "Zippopotam API should return a response with HTTP code 200",
              "timedOut": false,
              "duration": 1336,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = chakram.get(\"http://api.zippopotam.us/de/bw/stuttgart\");\nexpect(response).to.have.status(200);\nreturn chakram.wait();",
              "err": {},
              "uuid": "c5468091-f9b8-475a-a67a-ccbbf78df9d6",
              "parentUUID": "e83a35d8-b203-4685-9378-2d07189a7783",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a response time below 1s",
              "fullTitle": "Zippopotam API should have a response time below 1s",
              "timedOut": false,
              "duration": 504,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let request = chakram.get(\"http://api.zippopotam.us/de/bw/stuttgart\");\nreturn expect(request).to.have.responsetime(999);",
              "err": {},
              "uuid": "50a1ce81-6b79-4cbc-8f38-2223353df94f",
              "parentUUID": "e83a35d8-b203-4685-9378-2d07189a7783",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return country Germany and state Baden-Württemberg",
              "fullTitle": "Zippopotam API should return country Germany and state Baden-Württemberg",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = chakram.get(\"http://api.zippopotam.us/de/bw/stuttgart\").then((resp) => {\n    expect(resp.body.country).to.equal('Germany');\n    expect(resp.body.country).to.equal('Baden-Württemberg');\n    return chakram.wait();\n});",
              "err": {},
              "uuid": "718bcf0a-d743-40f5-824e-449c643c5505",
              "parentUUID": "e83a35d8-b203-4685-9378-2d07189a7783",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have place name Stuttgart Degerloch for post code 70597",
              "fullTitle": "Zippopotam API should have place name Stuttgart Degerloch for post code 70597",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let response = chakram.get(\"http://api.zippopotam.us/de/bw/stuttgart\").then((resp) => {\n    for (let place in resp.body.places) {\n        if (place['post code'] == 70597) {\n            expect(place['place name']).to.equal('Stuttgart Degerloch');\n        }\n    }\n    return chakram.wait();\n});",
              "err": {},
              "uuid": "ec502145-e825-4d57-8a57-9d069b7bcf30",
              "parentUUID": "e83a35d8-b203-4685-9378-2d07189a7783",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5468091-f9b8-475a-a67a-ccbbf78df9d6",
            "50a1ce81-6b79-4cbc-8f38-2223353df94f",
            "718bcf0a-d743-40f5-824e-449c643c5505",
            "ec502145-e825-4d57-8a57-9d069b7bcf30"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1842,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
          "title": "Zippopotam API data driven test - When the links are working as expected it ...",
          "fullFile": "/Users/Migii/Desktop/sogeti_test_automation_task/sogeti_test_automation_task/test/zippopotamapidatadriven_test.js",
          "file": "/test/zippopotamapidatadriven_test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return 200 for request http://api.zippopotam.us/us/90210",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should return 200 for request http://api.zippopotam.us/us/90210",
              "timedOut": false,
              "duration": 1638,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.status}`).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "ce4f2072-2daf-43d2-9617-8ed33b5ffb83",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have content type JSON for request http://api.zippopotam.us/us/90210",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should have content type JSON for request http://api.zippopotam.us/us/90210",
              "timedOut": false,
              "duration": 505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.header['content-type']}`).to.have.header('content-type', 'application/json');\n        done();\n    });",
              "err": {},
              "uuid": "e2e8f61a-63a8-4697-8258-f0823b7c1000",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a response time below 1s for request http://api.zippopotam.us/us/90210",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should have a response time below 1s for request http://api.zippopotam.us/us/90210",
              "timedOut": false,
              "duration": 408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        let responseTime = new Date() - start;\n        expect(responseTime,`... instead took ${ responseTime }`).to.have.below(1000);\n        done();\n    });",
              "err": {},
              "uuid": "6ced5d0c-c7a4-47e3-8e68-56914f55bdfe",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have country: us and postal code: 90210 for place name: Beverly Hills",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should have country: us and postal code: 90210 for place name: Beverly Hills",
              "timedOut": false,
              "duration": 1396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res.body['country abbreviation'],`... instead having ${ res.body['country abbreviation'] }`).to.equal(country.toUpperCase());\n        expect(res.body['post code'],`... instead having ${ res.body['post code'] }`).to.equal(postal_code);\n        expect(res.body.places[0]['place name'],`... instead having ${ res.body.places[0]['place name'] }`).to.equal(place_name);\n        done();\n    });",
              "err": {},
              "uuid": "a0ef250e-80d3-4be0-b5a2-81691e183ee3",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 200 for request http://api.zippopotam.us/us/12345",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should return 200 for request http://api.zippopotam.us/us/12345",
              "timedOut": false,
              "duration": 446,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.status}`).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "4c53e94b-8fbb-4109-8640-cf3d044305de",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have content type JSON for request http://api.zippopotam.us/us/12345",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should have content type JSON for request http://api.zippopotam.us/us/12345",
              "timedOut": false,
              "duration": 511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.header['content-type']}`).to.have.header('content-type', 'application/json');\n        done();\n    });",
              "err": {},
              "uuid": "05f9d854-53fd-46a8-936f-9d68b54f992c",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a response time below 1s for request http://api.zippopotam.us/us/12345",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should have a response time below 1s for request http://api.zippopotam.us/us/12345",
              "timedOut": false,
              "duration": 409,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        let responseTime = new Date() - start;\n        expect(responseTime,`... instead took ${ responseTime }`).to.have.below(1000);\n        done();\n    });",
              "err": {},
              "uuid": "aa700b75-afd7-4594-8161-39c703a67beb",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have country: us and postal code: 12345 for place name: Schenectady",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should have country: us and postal code: 12345 for place name: Schenectady",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res.body['country abbreviation'],`... instead having ${ res.body['country abbreviation'] }`).to.equal(country.toUpperCase());\n        expect(res.body['post code'],`... instead having ${ res.body['post code'] }`).to.equal(postal_code);\n        expect(res.body.places[0]['place name'],`... instead having ${ res.body.places[0]['place name'] }`).to.equal(place_name);\n        done();\n    });",
              "err": {},
              "uuid": "540a5cdc-32da-412b-96e4-91a7b7a3fe20",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 200 for request http://api.zippopotam.us/ca/B2R",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should return 200 for request http://api.zippopotam.us/ca/B2R",
              "timedOut": false,
              "duration": 512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.status}`).to.have.status(200);\n        done();\n    });",
              "err": {},
              "uuid": "51ad804f-1428-4963-8a01-406b350a6266",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have content type JSON for request http://api.zippopotam.us/ca/B2R",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should have content type JSON for request http://api.zippopotam.us/ca/B2R",
              "timedOut": false,
              "duration": 512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res,`... instead got ${ res.header['content-type']}`).to.have.header('content-type', 'application/json');\n        done();\n    });",
              "err": {},
              "uuid": "41ea27e5-d0f9-4fde-aff6-ab6d5ef4c6b8",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a response time below 1s for request http://api.zippopotam.us/ca/B2R",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should have a response time below 1s for request http://api.zippopotam.us/ca/B2R",
              "timedOut": false,
              "duration": 817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        let responseTime = new Date() - start;\n        expect(responseTime,`... instead took ${ responseTime }`).to.have.below(1000);\n        done();\n    });",
              "err": {},
              "uuid": "4c2cdca0-7084-4feb-917a-74b5115586dc",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have country: ca and postal code: B2R for place name: Waverley",
              "fullTitle": "Zippopotam API data driven test - When the links are working as expected it ... should have country: ca and postal code: B2R for place name: Waverley",
              "timedOut": false,
              "duration": 512,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let start = new Date();\nchai.request(url)\n    .get(`/${country}/${postal_code}`)\n    .end(function(err, res) {\n        expect(res.body['country abbreviation'],`... instead having ${ res.body['country abbreviation'] }`).to.equal(country.toUpperCase());\n        expect(res.body['post code'],`... instead having ${ res.body['post code'] }`).to.equal(postal_code);\n        expect(res.body.places[0]['place name'],`... instead having ${ res.body.places[0]['place name'] }`).to.equal(place_name);\n        done();\n    });",
              "err": {},
              "uuid": "906e0a8a-d570-4e40-b938-3c26d83f433d",
              "parentUUID": "c1e0d463-0b1e-4c49-b086-9c6d3658f825",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce4f2072-2daf-43d2-9617-8ed33b5ffb83",
            "e2e8f61a-63a8-4697-8258-f0823b7c1000",
            "6ced5d0c-c7a4-47e3-8e68-56914f55bdfe",
            "a0ef250e-80d3-4be0-b5a2-81691e183ee3",
            "4c53e94b-8fbb-4109-8640-cf3d044305de",
            "05f9d854-53fd-46a8-936f-9d68b54f992c",
            "aa700b75-afd7-4594-8161-39c703a67beb",
            "540a5cdc-32da-412b-96e4-91a7b7a3fe20",
            "51ad804f-1428-4963-8a01-406b350a6266",
            "41ea27e5-d0f9-4fde-aff6-ab6d5ef4c6b8",
            "4c2cdca0-7084-4feb-917a-74b5115586dc",
            "906e0a8a-d570-4e40-b938-3c26d83f433d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8382,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}